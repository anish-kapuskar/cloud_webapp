version: 2
jobs:
  build:
    docker:
      - image: circleci/openjdk:11-jdk

    steps:

      - checkout
      
      - run:
          name: Build WAR
          command: |
            ls -al
            cd BookStoreApp/
            ls -al
            mvn clean install
            cd target
            ls -al
            cd ../../
            ls -al
      - run :
          name : Install pip
          command: |
            sudo apt-get update || sudo apt-get update
            sudo apt-get install python3
            python3 --version
            sudo apt install python3-pip
            pip3 --version
      - run :
          name  :   AWS CLI Install 
          command :  sudo pip3 install awscli

      - run:
          name: Zip Artifact
          command: |
            echo "The current build number is ${CIRCLE_BUILD_NUM}"
            pwd
            echo "Listing current directory content"
            ls -al
            echo "Making the codedeploy_artifact directory"
            mkdir -p codedeploy_artifact
            echo "Changing directory to codedeploy_artifact"
            cd codedeploy_artifact
            echo "Copying the jar file from ../BookStoreApp/target/BookStoreApp-1.0-SNAPSHOT.war to the codedeploy_artifact"
            cp ../BookStoreApp/target/BookStoreApp-1.0-SNAPSHOT.war .
            chmod -R 777 BookStoreApp-1.0-SNAPSHOT.war
            mv BookStoreApp-1.0-SNAPSHOT.war ROOT.war
            echo "Copying the properties from /BookStoreApp/src/main/resources to the codedeploy_artifact"
            cp ../BookStoreApp/src/main/resources/*.* .

            echo "Copying all .sh files from ../codedeploy directory to the codedeploy_artifact"
            cp ../codedeploy/*.sh .
            echo "Copying all .yml files from ../ directory to the codedeploy_artifact"
            cp ../*.yml .
            echo "Copying amazon-cloudwatch-agent.json from ../ directory to the codedeploy_artifact"
            cp ../amazon-cloudwatch-agent.json .

            echo "Zipping all files in the codedeploy_artifact directory"
            zip -r BookStoreApp-webapp-${CIRCLE_BUILD_NUM}.zip .
            echo "Removing the files except for the zip file from the codedeploy_artifact directory"
            rm *.properties *.xml
            ls -al
            pwd
            echo "Changing directory to root"
            cd ..
            pwd
            ls -al

      - run:
          name: Upload Artifact to S3
          command: |
            echo "Uploading Artifact to S3 bucket ${CODEDEPLOY_S3BUCKET}"
            cd codedeploy_artifact
            
            export AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
            export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
            export AWS_DEFAULT_REGION=us-east-1
            aws s3 cp BookStoreApp-webapp-${CIRCLE_BUILD_NUM}.zip s3://${CODEDEPLOY_S3BUCKET}
            cd ..
      - run:
          name: Make CodeDeploy API call
          command: |
            echo "Calling CodeDeploy Agent to pick the artifact and deploy on EC2 instance"
            export AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
            export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
            export AWS_DEFAULT_REGION=us-east-1
            aws deploy create-deployment --application-name "csye6225-webapp" --deployment-group-name "csye6225-webapp-deployment" --s3-location bucket=${CODEDEPLOY_S3BUCKET},bundleType=zip,key=BookStoreApp-webapp-${CIRCLE_BUILD_NUM}.zip



